I. 	src/ -> library (built via parcel)
	user/ -> userscripts that depend on Library (built via tsc)

II. via JS wrapper
	src/common -> common library (not built independently)
	bridge/ -> WD-USOS Bridge (built via parcel)
	export/ -> iCalendar Export (built via parcel)
	all.ts -> chains everything together (built via parcel)

Then, .user.js files are developed independently and consist only of desired feature call, e.g. AddCalendarExport() or AddWDUSOSBridge() and library reference.
Additional question: should all 'backoffice' files (those with parsers, class definitions, etc) be in 'common' or in respective script folders.